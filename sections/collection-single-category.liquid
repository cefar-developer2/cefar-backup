<div data-section-type="collection-template" id="collection-page">
  <div class="container">
  <div class="page-header engage-typography cf lg:mt-24 mt-12 mb-6">
      <h1 class="text-pink mb-0 text-2xl text-center uppercase">{{ collection.title }} {% if collection.title == 'All' %}Products{% endif %}</h1>
  </div><!-- /.page-header -->
  </div><!-- /.container -->

{% if collection.products.size == 0 %}
  <div class="container"><h5 class="align-centre fully-spaced-row">{{ 'collections.general.no_matches' | t }}</h5></div>
{% else %}
  <div class="container">
      <div class="flex mt-10 mb-5 w-full lg:hidden">
          <div class="relative flex items-center flex-1 w-1/2">
              <select name="sort_method" v-model="activeSortMethod" class="uppercase text-sm h-12 flex-1 flex-shrink-0 font-body border border-black px-5 py-3" style="-webkit-appearance: none;" id="">
                  <option value="Default">Sort By...</option>
                  <option value="Name">Name</option>
                  <option value="Price Ascending">Lowest price</option>
                  <option value="Price Descending">Highest price</option>
              </select>
              <i class="text-[12px] mb-0.5 fas fa-chevron-down right-4 absolute"></i>
          </div>
          <button class="btn ml-4 flex-1 flex-shrink-0 w-1/2" @click="openModal()">
              <div class="flex justify-between w-full items-center">
                  <span>Filters...</span>
                  <i class="fas fa-sliders-v"></i>
              </div>
          </button>
      </div>

      <div class="grid grid-cols-2 lg:grid-cols-3">
          <!-- Filters modal -->
          <div class="hidden-mobile filters-modal col-span-1 w-full lg:opacity-100 lg:pointer-events-auto fixed lg:static bg-black lg:bg-transparent bg-opacity-30 left-0 top-0 min-h-screen z-[100] lg:z-auto lg:h-auto" @click="closeModal()">
              <div class="filters-modal__wrapper bg-white w-3/4 px-8 py-8 min-h-screen" @click.stop>
                  <span class="filters-modal__close" @click="closeModal()">&times;</span>

                  <h2 class="lg:hidden uppercase pb-4 border-b border-black border-opacity-10">Filters</h2>
                  <!-- <div class="hidden lg:flex flex-col py-10 border-b border-black border-opacity-10">
                      <a href="{{ section.settings.button_filter_link1 }}" class="font-body mb-6 {% if collection.url == section.settings.button_filter_link1 %}text-pink font-bold{% endif %}">{{ section.settings.button_filter1 }}</a>
                      <a href="{{ section.settings.button_filter_link2 }}" class="font-body mb-6 {% if collection.url == section.settings.button_filter_link2 %}text-pink font-bold{% endif %}">{{ section.settings.button_filter2 }}</a>
                      <a href="{{ section.settings.button_filter_link3 }}" class="font-body mb-6 {% if collection.url == section.settings.button_filter_link3 %}text-pink font-bold{% endif %}">{{ section.settings.button_filter3 }}</a>
                      {% if section.settings.button_filter4 != blank %}
                          <a href="{{ section.settings.button_filter_link4 }}" class="font-body {% if collection.url == section.settings.button_filter_link4 %}text-pink font-bold{% endif %}">{{ section.settings.button_filter4 }}</a>
                      {% endif %}
                  </div> -->
                  <div class="hidden lg:flex justify-center flex-col py-10 border-b border-black border-opacity-10">
                      <div class="relative flex items-center">
                          <select name="sort_method" v-model="activeSortMethod" class="uppercase w-full font-body border border-black px-5 py-4 select-no-arrow" style="-webkit-appearance: none;" id="">
                              <option value="Default">Sort By...</option>
                              <option value="Name">Name</option>
                              <option value="Price Ascending">Lowest price</option>
                              <option value="Price Descending">Highest price</option>
                          </select>
                          <i class="text-[12px] mb-0.5 fas fa-chevron-down right-4 absolute"></i>
                      </div>
                  </div>
                  <div class="flex flex-col pt-10 pb-6 border-b border-black border-opacity-10">
                      <div class="flex justify-between items-center mb-4 cursor-pointer" @click="toggleSection('types')">
                          <p class="text-pink font-bold">Product Type</p>
                          <i class="fal fa-minus text-pink" :class="{'fa-minus': openSections.includes('types'), 'fa-plus': !openSections.includes('types')}"></i>
                      </div>
                      <p v-if="openSections.includes('types')" v-for="productType in productTypes" class="mb-4 flex items-center cursor-pointer" @click="toggleType(productType)">
                          <i v-if="activeProductTypes.includes(productType)" class="fas fa-circle text-pink" style="font-size: 6px; padding-right: 6px;"></i>
                          <span v-text="productType"></span>
                      </p>
                  </div>
                  <div class="flex flex-col pt-10 pb-6 border-b border-black border-opacity-10">
                      <div class="flex justify-between items-center mb-4 cursor-pointer" @click="toggleSection('tags')">
                          <p class="text-pink font-bold">Product Tags</p>
                          <i class="fal text-pink" :class="{'fa-minus': openSections.includes('tags'), 'fa-plus': !openSections.includes('tags')}"></i>
                      </div>
                      <p v-if="openSections.includes('tags')" v-for="productTag in productTags" class="mb-4 flex items-center cursor-pointer" @click="toggleTag(productTag)">
                          <i v-if="activeProductTags.includes(productTag)" class="fas fa-circle text-pink" style="font-size: 6px; padding-right: 6px;"></i>
                          <span v-text="productTag"></span>
                      </p>
                  </div>

                  <div class="flex flex-col pt-10 pb-6 border-b border-black border-opacity-10">
                      <div class="flex justify-between items-center mb-4 cursor-pointer" @click="toggleSection('ranges')">
                          <p class="text-pink font-bold">Price Range</p>
                          <i class="fal text-pink" :class="{'fa-minus': openSections.includes('ranges'), 'fa-plus': !openSections.includes('ranges')}"></i>
                      </div>
                      <p v-if="openSections.includes('ranges')" v-for="priceRange in priceRanges" class="mb-4 flex items-center cursor-pointer" @click="togglePriceRange(priceRange)">
                          <i v-if="activePriceRanges.includes(priceRange)" class="fas fa-circle text-pink" style="font-size: 6px; padding-right: 6px;"></i>
                          <span v-text="'£'+(priceRange[0]/100).toFixed(2)"></span>
                          <span class="mx-2" v-if="priceRange[1]">-</span>
                          <span v-else>+</span>
                          <span v-if="priceRange[1]" v-text="'£'+ (priceRange[1]/100).toFixed(2)"></span>
                      </p>
                  </div>
                  <button class="btn mt-8 w-full lg:hidden" @click="closeModal()">Close</button>
                  <p @click="clearFilters" class="lg:hidden text-black text-opacity-30 mt-4">Clear filters</p>
              </div>

          </div>
          <!-- End filters modal -->

          <div class="col-span-2">
              <div class="collection-listing{% if section.settings.coll_gridstream_mode == 'stream' %}-stream{% endif %} cf">
                <div class="lg:grid-cols-2 lg:gap-8 lg:pb-28 grid grid-cols-2 gap-4 pb-16">
                    {% for product in collection.products %}
                    <div v-if="shouldShow({{ forloop.index0 }})" class="flex flex-col items-center {% unless single_line %}{% endunless %} text-center {% if padded_mobile %}px-4 lg:px-0{% endif %} {% if padded %}px-4{% endif %}" :style="{order: products[{{ forloop.index0 }}].order}">
                        <div class="mb-3.5 relative w-full">
                            <a href="{{ product.url }}" class="flex items-center justify-center w-full h-full">
                                <img class="" src="{{ product.featured_image | img_url: '700x700' }}" alt="{{ product.title }}">
                            </a>
                        </div>
                        <a href="{{ product.url }}">
                            <p class="min-h-[3.5rem] lg:min-h-[0px] mt-0 mb-1 text-base font-bold">{{ product.title }}</p>
                        </a>

                        <div class="flex items-center justify-center mb-2 {% unless product.metafields.my_fields.rating_override %}opacity-0{% endunless %}">
                            {% assign stars = product.metafields.my_fields.rating_override | times: 1 %}
                            {% for i in (1..5) %}
                                {% assign half = i | minus: 0.5 %}
                                {% if stars >= i %}
                                    <i class="text-pink mx-0.5 fas fa-star"></i>
                                {% elsif stars >= half %}
                                    <i class="text-pink mx-0.5 fas fa-star-half-alt"></i>
                                {% else %}
                                    <i class="text-pink mx-0.5 far fa-star"></i>
                                {% endif %}
                            {% endfor %}
                            <span class="font-bold text-pink ml-2">{{ product.metafields.my_fields.rating_override }}</span>
                        </div>

                        {%- assign product_price = product.price | money -%}
                        {%- assign product_compare_price = product.compare_at_price | money -%}

                        <h4 class="text-pink mb-6 text-lg">
                            {%- if product.compare_at_price < product.price -%}
                                <span class="current-price price">
                                    {{- product_price -}}
                                </span>

                                <span class="compare-price price">
                                    {{- product_compare_price -}}
                                </span>
                            {%- else -%}
                                <span class="current-price price">
                                    {{- product_price -}}
                                </span>
                            {%- endif -%}
                        </h4>

                        {% if product.available and product.metafields.custom.out_of_stock != true %}
                            <form action="/cart/add" method="post" class="flex justify-center {% unless template.name == 'cart' %}js-add-to-cart{% endunless %}">
                                <input type="hidden" name="id" value="{{ product.first_available_variant.id }}">
                                <button class="btn">Add to Cart</button>
                            </form>
                        {% else %}
                            <button class="btn btn--disabled">Sold Out</button>
                        {% endif %}
                    </div>
                    {% endfor %}

                </div>
              </div>

          </div>
      </div>
      <div v-show="maxPages != 1" class="w-2/5 pt-10 pb-20 justify-center mx-auto flex border-t border-black border-opacity-10 items-center">
          <i @click="prevPage" :class="{'opacity-10': currentPage == 1}" class="fal fa-arrow-left cursor-pointer"></i>
          <p class="text-base mx-5">
              <span v-text="currentPage"></span>
              <span class="mx-1">/</span>
              <span v-text="maxPages"></span>
          </p>
          <i @click="nextPage" :class="{'opacity-10': currentPage == maxPages}" class="fal fa-arrow-right cursor-pointer"></i>
      </div>
  </div>

{% endif %}

<script src="https://unpkg.com/vue@3"></script>

<script>
// Existing code from previous developer written in Vue.js
var products = {{ collection.products | json }};
var productTypes = [];
for(let i = 0; i < products.length; i++) {
    products[i].isVisible = true;
    products[i].page = Math.ceil((i+1) / 6);
    if(!productTypes.includes(products[i].type) && products[i].type) {
        productTypes.push(products[i].type);
    }
}

let filteredTags = [];
var productTags = {{ collection.all_tags |  json }};
productTags.forEach((tag) => {
  if (!tag.startsWith("_")) {
      filteredTags.push(tag);
    }
});

if(products) {
    var app = Vue.createApp({
        data() {
            return {
                products: products,
                productTypes: productTypes,
                activeSortMethod: 'Default',
                sortedProducts: products,
                productTags: filteredTags,
                activeProductTags: [],
                sortMethods: ['Name', 'Bestsellers', 'Highest rated', 'Price Ascending', 'Price Descending'],
                priceRanges: [[1000, 1999], [2000, 2999], [3000, 3999], [4000, 4999], [5000]],
                activePriceRanges: [],
                productsPerPage: 48,
                openSections: ['types','tags','ranges'],
                currentPage: 1,
                activeProductTypes: []
            };
        },
        computed: {
            maxPages() {
                var activeProducts = 0;
                this.products.forEach((prod) => {
                    activeProducts += prod.isVisible;
                });
                return Math.max(1, Math.ceil(activeProducts / this.productsPerPage));
            },
        },
        watch: {
            activeSortMethod(newSortMethod, oldSortMethod) {
                var sorted_prods = [...this.products];
                switch(this.activeSortMethod) {
                    case('Default'):
                        break;
                    case('Name'):
                        sorted_prods.sort((a,b) => {
                            return a.title > b.title ? 1 : -1;
                        });
                        break;
                    case('Price Ascending'):
                        sorted_prods.sort(function(a,b) {
                            return a.price > b.price ? 1 : -1;
                        });
                        break;
                    case('Price Descending'):
                        sorted_prods.sort(function(a,b) {
                            return a.price < b.price ? 1 : -1;
                        });
                        break;
                }

                this.products.forEach(function(prod) {
                    prod.order = sorted_prods.indexOf(prod);
                });
                this.sortedProducts = sorted_prods;
                this.setProductPages();
            },
        },
        methods: {
            toggleSection(section) {
                if(!this.openSections.includes(section)) {
                    this.openSections.push(section);
                } else {
                    this.openSections = this.openSections.filter(function(t) {
                        return t !== section;
                    });
                }
            },
            filterProducts() {
                var activeProducts = 0;
                this.currentPage = 1;
                this.products.forEach((prod) => {
                    var active = true;
                    if(this.activeProductTypes.length && (!this.activeProductTypes.includes(prod.type) || !prod.type)) {
                        prod.isVisible = false;
                        return;
                    }
                    if(this.activeProductTags.length) {
                        var hasActiveTag = false;
                        prod.tags.forEach((tag) => {
                            if(this.activeProductTags.includes(tag)) {
                                hasActiveTag = true;
                            }
                        });
                        if(!hasActiveTag) {
                            prod.isVisible = false;
                            return;
                        }
                    }

                    if(this.activePriceRanges.length) {
                        var inPriceRange = false;
                        this.activePriceRanges.forEach((range) => {
                            if(!range[1]) {
                                if(prod.price >= range[0]) {
                                    inPriceRange = true;
                                }
                            } else if(prod.price >= range[0] && prod.price <= range[1]) {
                                inPriceRange = true;
                            }
                        });
                        active = inPriceRange;
                    }

                    prod.isVisible = active;
                });
                this.setProductPages();
            },
            shouldShow(index) {
                let prod = this.products[index];
                if(!prod || !prod.isVisible || prod.page != this.currentPage) {
                    return false;
                }
                return true;
            },
            clearFilters() {
                this.activeProductTypes = [];
                this.activePriceRanges = [];
                this.filterProducts();
            },
            setProductPages() {
                var activeProducts = 0;
                this.sortedProducts.forEach((prod) => {
                    var product = this.products.filter((product) => { return product.id == prod.id; })[0];
                    if(product.isVisible) {
                        activeProducts++;
                        product.page = Math.ceil(activeProducts / this.productsPerPage);
                    }
                });
            },
            toggleType(type) {
                if(!this.activeProductTypes.includes(type)) {
                    this.activeProductTypes.push(type);
                } else {
                    this.activeProductTypes = this.activeProductTypes.filter(function(t) {
                        return t !== type;
                    });
                }
                this.filterProducts();
            },
            toggleTag(tag) {
                if(!this.activeProductTags.includes(tag)) {
                    this.activeProductTags.push(tag);
                } else {
                    this.activeProductTags = this.activeProductTags.filter(function(t) {
                        return t !== tag;
                    });
                }
                this.filterProducts();
            },
            togglePriceRange(range) {
                if(!this.activePriceRanges.includes(range)) {
                    this.activePriceRanges.push(range);
                } else {
                    this.activePriceRanges = this.activePriceRanges.filter(function(r) {
                        return r !== range;
                    });
                }
                this.filterProducts();
            },
            openModal() {
              const modal = document.querySelector('.filters-modal');
              modal.classList.remove('hidden-mobile');
              document.body.classList.add('modal');
            },
            closeModal() {
              const modal = document.querySelector('.filters-modal');
              modal.classList.add('hidden-mobile');
              document.body.classList.remove('modal');
            },
            nextPage() {
                this.currentPage = Math.min(this.maxPages, this.currentPage + 1);
            },
            prevPage() {
                this.currentPage = Math.max(1, this.currentPage - 1);
            }
        },
        mounted() {
            this.filterProducts();
        },
    }).mount('#collection-page');
}


</script>

<style>
  .filters-modal__close {
      display: none;
  }

  @media screen and (max-width: 1024px) {
      .hidden-mobile {
          opacity: 0;
          pointer-events: none;
      }

      .filters-modal__wrapper {
          position: relative;
          overflow-y: auto;
          max-height: 100vh;
      }

      .filters-modal__close {
          display: block;
          position: absolute;
          top:1rem;
          right: 1rem;
      }
  }

  body.modal {
      overflow: hidden;
  }
</style>


{% schema %}
{
  "name": "Collection - All Products",
  "settings": [
    {
      "type": "select",
      "id": "coll_desc_pos",
      "label": "Description position",
      "options": [
        {
          "value": "below",
          "label": "Below collection title"
        },
        {
          "value": "above",
          "label": "Above collection title"
        }
      ]
    },
    {
      "type": "checkbox",
      "id": "coll_show_sort",
      "label": "Show 'sort by' dropdown",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "coll_show_feat",
      "label": "Show 'Featured' in sort by",
      "default": false
    },
    {
      "type": "checkbox",
      "id": "coll_show_tags",
      "label": "Show ungrouped tags",
      "default": true
    },
  {
      "type": "header",
      "content": "Button Filters"
    },
  {
      "type": "text",
      "id": "button_filter1",
      "label": "Button Filter 1"
    },
    {
      "type": "url",
      "id": "button_filter_link1",
      "label": "Button Filter Link 1"
    },

   {
      "type": "text",
      "id": "button_filter2",
      "label": "Button Filter 2"
    },
    {
      "type": "url",
      "id": "button_filter_link2",
      "label": "Button Filter Link 2"
    },

   {
      "type": "text",
      "id": "button_filter3",
      "label": "Button Filter 3"
    },

    {
      "type": "url",
      "id": "button_filter_link3",
      "label": "Button Filter Link 3"
    },

    {
      "type": "text",
      "id": "button_filter4",
      "label": "Button Filter 4"
    },
    {
      "type": "url",
      "id": "button_filter_link4",
      "label": "Button Filter Link 4"
    },


  {
      "type": "header",
      "content": "Tag group 1"
    },
    {
      "type": "checkbox",
      "id": "show_tagfilt_custom1",
      "label": "Show",
      "default": false
    },
    {
      "type": "text",
      "id": "tagfilt_custom1_name",
      "label": "Name"
    },
    {
      "type": "text",
      "id": "tagfilt_custom1_tags",
      "label": "Tags to include",
      "info": "Separate with commas"
    },
    {
      "type": "header",
      "content": "Tag group 2"
    },
    {
      "type": "checkbox",
      "id": "show_tagfilt_custom2",
      "label": "Show",
      "default": false
    },
    {
      "type": "text",
      "id": "tagfilt_custom2_name",
      "label": "Name"
    },
    {
      "type": "text",
      "id": "tagfilt_custom2_tags",
      "label": "Tags to include",
      "info": "Separate with commas"
    },
    {
      "type": "header",
      "content": "Layout"
    },
    {
      "type": "select",
      "id": "coll_num_per_page",
      "label": "Number of products to show per page",
      "options": [
        {
          "value": "9",
          "label": "9"
        },
        {
          "value": "16",
          "label": "16"
        },
        {
          "value": "24",
          "label": "24"
        },
        {
          "value": "32",
          "label": "32"
        },
        {
          "value": "40",
          "label": "40"
        }
      ],
      "default": "16"
    },
    {
      "type": "select",
      "id": "coll_gridstream_mode",
      "label": "Show products in a grid or a list",
      "options": [
        {
          "value": "grid",
          "label": "Grid"
        },
        {
          "value": "stream",
          "label": "List"
        }
      ],
      "default": "grid"
    },
    {
      "type": "checkbox",
      "id": "coll_gridstream_toggle",
      "label": "Show toggle for grid and list views",
      "default": true
    }
]
}
{% endschema %}
