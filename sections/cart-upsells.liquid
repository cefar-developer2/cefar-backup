{{ 'modal.css' | asset_url | stylesheet_tag }}

{% comment %} Render each modal {% endcomment %}
{%- for block in section.blocks -%}
  {%- case block.type -%}

    <!-- Freegift Modal -->
    {%- when 'freegift' -%}
      <div id="discountModal-{{ block.id }}" class="modal">
        <div class="modal-content">
          <span class="close">&times;</span>
          <h2 class="text-pink font-title text-2xl text-center uppercase mb-5">{{ block.settings.free_gift_heading }}</h2>
          <div class="text-center mb-5">{{ block.settings.free_gift_message }}</div>
          <button id="{{ block.settings.campaign_tag }}" class="btn btn--pink modal-button close-button">{{ block.settings.free_gift_button }}</button>
        </div>
      </div>

      <script>
        function addFreeGift() {     
          // Get free gift settings
          var threshold = parseInt('{{ block.settings.free_gift_threshold }}');
          var variant_id = {{ block.settings.free_gift_product.first_available_variant.id }};
          var cartTotal = '{{ cart.total_price }}';
          threshold = threshold * 100;

          // Check if free gift is already in cart
          let found = false;
          let items = {{ cart.items | json }};
          items.forEach(item => {
            if (variant_id == item.id) {
              found = true;
            }
          });

          // Get current modal
          var modal = document.getElementById("discountModal-{{ block.id }}");

          // If conditions met, display product upsell
          if (cartTotal > threshold) {
            if (found || sessionStorage.getItem("plumpit.freegift") == "true") {
              console.log("ðŸš€ ~ Free gift already in cart");
            } else {
              console.log("ðŸš€ ~ Free gift threshold met - Adding item to cart");

              let data = {
                'items': [{
                  'id': variant_id,
                  'quantity': 1
                }]
              };

              // Pass data array to cart and redirect
              fetch(window.Shopify.routes.root + 'cart/add.js', {
                method: 'POST',
                headers: {
                  'Content-Type': 'application/json'
                },
                body: JSON.stringify(data)
                }).then((response) => {
                  return response.json();
                }).then((json) => {
                  sessionStorage.setItem('plumpit.freegift', true);
                  modal.style.display = "block";
                }).catch((err) => {
                  console.error(err)
                });
            }
          } else {
            console.log("ðŸš€ ~ Free gift threshold not met");
          }
        }

        addFreeGift();

      </script>

    <!-- Product Upsell Modal -->
    {%- when 'upsell' -%}
      <div id="upsellModal-{{ block.id }}" class="modal">
        <div class="modal-content">
          <span id="upsell-close" class="close">&times;</span>
          <h2 class="text-pink font-title text-2xl text-center uppercase mb-5">{{ block.settings.upsell_heading }}</h2>
          <div class="text-center mb-5">{{ block.settings.upsell_message }}</div>
          {% if block.settings.show_product_card == true %}
            {% render 'product-card', product: block.settings.upsell_product, padded: true, single_line: true %}
          {% endif %}
          {% if block.settings.upsell_image %}
            <img class="upsell-image" src="{{ block.settings.upsell_image | img_url: 'large' }}" alt="{{ block.settings.upsell_heading }}">
          {% endif %}
          <button id="{{ block.settings.accept_tag }}" data-action="{{ block.settings.action }}" data-trigger="{{ block.settings.trigger_product.first_available_variant.id }}" data-upsell="{{ block.settings.upsell_product.first_available_variant.id }}" class="btn btn--pink modal-button upsell-button">{{ block.settings.upsell_button }}</button>
          <button id="{{ block.settings.decline_tag }}" class="upsell-decline">{{ block.settings.upsell_decline_messaage }}</a>
        </div>
      </div>

      <script>
        function productUpsell() {
          console.log("Product Upsell");

          // Get upsell settings
          var threshold = parseInt('{{ block.settings.bcgcf_threshold }}');
          var cartCount = '{{ cart.item_count }}';
          var trigger_product = {{ block.settings.trigger_product.first_available_variant.id }};
          var upsell_product = {{ block.settings.upsell_product.first_available_variant.id }};

          // Check if trigger product is in cart
          let trigger_found = false;
          let upsell_found = false;

          let items = {{ cart.items | json }};
          items.forEach(item => {
            if (trigger_product == item.id) {
              trigger_found = true;
            } else if (upsell_found == item.id) {
              upsell_found = true;
            }
          });

          // Get current modal
          var modal = document.getElementById("upsellModal-{{ block.id }}");

          // Exit if offer already accepted
          if (sessionStorage.getItem("plumpit.upsell") == "true") return false;

          // Exit if another upsell is already active
          if (sessionStorage.getItem("plumpit.upsell_active") == "true") return false;

          // If conditions met, display product upsell
          if (trigger_found == true && upsell_found == false && cartCount == 1) {
            console.log("ðŸš€ ~ Product upsell conditions met - Displaying upsell");
            sessionStorage.setItem('plumpit.upsell_active', true);
            modal.style.display = "block";
          } else {
            console.log("ðŸš€ ~ Product upsell requirements not met");
          }
        }
        
        productUpsell();
      </script>
      
    <!-- Buy Cart, Get Cart Free Modal -->
    {%- when 'bcgcf' -%}
      <div id="bcgcfModal-{{ block.id }}" class="modal">
        <div class="modal-content">
          <span id="bcgcf-close" class="close">&times;</span>
          <h2 class="text-pink font-title text-2xl text-center uppercase mb-5">{{ block.settings.bcgcf_heading }}</h2>
          <div class="text-center mb-5">{{ block.settings.bcgcf_message }}</div>
          {% if block.settings.bcgcf_image %}
            <img class="upsell-image" src="{{ block.settings.bcgcf_image | img_url: 'large' }}" alt="{{ block.settings.bcgcf_heading }}">
          {% endif %}
          <button id="{{ block.settings.accept_tag }}" class="btn btn--pink modal-button bcgcf-accept">{{ block.settings.bcgcf_button }}</button>
          <button id="{{ block.settings.decline_tag }}" class="upsell-decline bcgcf-decline">{{ block.settings.bcgcf_decline_messaage }}</a>
        </div>
      </div>

      <script>
        function bcgcf() {
          // Get bcgcf settings
          var threshold = parseInt('{{ block.settings.bcgcf_threshold }}');
          var cartTotal = '{{ cart.total_price }}';
          var cartCount = '{{ cart.item_count }}';

          // Get current modal
          var modal = document.getElementById("bcgcfModal-{{ block.id }}");

          // Exit if offer already accepted
          if (sessionStorage.getItem("plumpit.bcgcf") == "true") return false;

          // If conditions met, display bcgcf
          if (cartCount >= threshold) {
            console.log("ðŸš€ ~ BCGCF conditions met - Displaying promotion");
            modal.style.display = "block";
          } else {
            console.log("ðŸš€ ~ BCGCF threshold not met");
          }
        }

        bcgcf();
      </script>
      
  {%- endcase -%}
{%- endfor -%}

{% schema %}
  {
    "name": "Cart Upsells",
    "settings": [
    ],
    "max_blocks": 10,
    "blocks": [
      {
        "type": "freegift",
        "name": "Free Gift",
        "limit": 1,
        "settings": [
          {
            "type": "text",
            "id": "heading",
            "label": "Offer name",
            "default": "Free Gift"
          },
          {
            "type": "product",
            "id": "free_gift_product",
            "label": "Select Free Gift"
          },
          {
            "type": "range",
            "id": "free_gift_threshold",
            "min": 0,
            "max": 100,
            "step": 1,
            "label": "Free Gift Threshold (Â£)",
            "default": 16
          },
          {
            "type": "text",
            "id": "free_gift_heading",
            "label": "Popup heading",
            "default": "Free Gift"
          },
          {
            "type": "richtext",
            "id": "free_gift_message",
            "label": "Popup message",
            "default": "<p>You have qualified for a free gift.</p>"
          },
          {
            "type": "text",
            "id": "free_gift_button",
            "label": "Button label",
            "default": "Claim gift"
          },
          {
            "type": "text",
            "id": "campaign_tag",
            "label": "Campaign Tag",
            "default": "free_gift",
            "info": "Enter a tag name for GA button tracking."
          }
        ]
      },
      {
        "type": "upsell",
        "name": "Upsell",
        "settings": [
          {
            "type": "text",
            "id": "heading",
            "label": "Offer name",
            "default": "Upsell"
          },
          {
            "type": "product",
            "id": "trigger_product",
            "label": "Trigger Product"
          },
          {
            "type": "select",
            "id": "action",
            "options": [
              {
                "value": "add",
                "label": "Add Product"
              },
              {
                "value": "replace",
                "label": "Replace Product"
              }
            ],
            "default": "replace",
            "label": "Action"
          },
          {
            "type": "product",
            "id": "upsell_product",
            "label": "Upsell Product"
          },
          {
            "type": "text",
            "id": "upsell_heading",
            "label": "Heading",
            "default": "Product Upsell"
          },
          {
            "type": "richtext",
            "id": "upsell_message",
            "label": "Message",
            "default": "<p>Why not save by upgrading your product.</p>"
          },
          {
            "type": "checkbox",
            "id": "show_product_card",
            "label": "Show Product Card",
            "default": false
          },
          {
            "type": "image_picker",
            "id": "upsell_image",
            "label": "Upsell image"
          },
          {
            "type": "text",
            "id": "upsell_button",
            "label": "Accept Button",
            "default": "Upgrade product"
          },
          {
            "type": "text",
            "id": "upsell_decline_messaage",
            "label": "Decline Button",
            "default": "No thanks"
          },
          {
            "type": "text",
            "id": "accept_tag",
            "label": "Campaign Accept Tag",
            "default": "upsell-button",
            "info": "Enter a tag name for GA button tracking."
          },
          {
            "type": "text",
            "id": "decline_tag",
            "label": "Campaign Decline Tag ",
            "default": "upsell-decline",
            "info": "Enter a tag name for GA button tracking."
          }
        ]
      },
      {
        "type": "bcgcf",
        "name": "Buy Cart, Get Cart Free",
        "limit": 1,
        "settings": [
          {
            "type": "text",
            "id": "heading",
            "label": "Offer name",
            "default": "Buy Cart, Get Cart Free"
          },
          {
            "type": "range",
            "id": "bcgcf_threshold",
            "min": 1,
            "max": 10,
            "step": 1,
            "label": "Quantity Threshold",
            "default": 3
          },
          {
            "type": "text",
            "id": "bcgcf_heading",
            "label": "Upsell heading",
            "default": "Buy Cart, Get Cart Free"
          },
          {
            "type": "richtext",
            "id": "bcgcf_message",
            "label": "Popup message",
            "default": "<p>You qualify for a free cart upgrade.</p>"
          },
          {
            "type": "image_picker",
            "id": "bcgcf_image",
            "label": "Upsell image"
          },
          {
            "type": "text",
            "id": "bcgcf_button",
            "label": "Button label",
            "default": "Accept offer"
          },
          {
            "type": "text",
            "id": "bcgcf_decline_messaage",
            "label": "Upsell decline message",
            "default": "No thanks"
          },
          {
            "type": "text",
            "id": "accept_tag",
            "label": "Campaign Accept Tag",
            "default": "bcgcf-button",
            "info": "Enter a tag name for GA button tracking."
          },          {
            "type": "text",
            "id": "decline_tag",
            "label": "Campaign Decline Tag",
            "default": "bcgcf-decline",
            "info": "Enter a tag name for GA button tracking."
          }
        ]
      }
    ],
    "presets": [
      {
        "name": "t:sections.multicolumn.presets.name",
        "blocks": [
          {
            "type": "freegift"
          },
          {
            "type": "upsell"
          },
          {
            "type": "bcgcf"
          }
        ]
      }
    ]
  }
{% endschema %}

<script>
  // Handle BCGCF Accepted
  async function handleBcgcfClicked() {
    // Get cart contents
    let items = {{ cart.items | json }};
    let newItems = [];

    items.forEach(
      function(item) {
        // Add products to array
        newItems.push({
          id: item.variant_id,
          quantity: item.quantity
        })
      }
    );

    let data = {
      'items': newItems
    };

    // Pass data array to cart and redirect
    fetch(window.Shopify.routes.root + 'cart/add.js', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(data)
      }).then((response) => {
        return response.json();
      }).then((json) => {
        console.log("ðŸš€ ~ BCGCF Added");
        /* window.location.href = '/discount/BCGCF?redirect=/checkout'; */
        window.location.href = '/cart';
      }).catch((err) => {
        console.error(err)
      });
  }

  // Handle Upsell Accepted
  function handleUpsellClicked(trigger_product, upsell_product, action) {
    // Create the data array
    let data = {
      'updates': {}
    };

    if (action == "add") {
      data['updates'][upsell_product] = 1;      
    } else if (action == "replace") {
      data['updates'][trigger_product] = 0;
      data['updates'][upsell_product] = 1;
    }

    // Pass data array to cart and redirect
    fetch(window.Shopify.routes.root + 'cart/update.js', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(data)
      }).then((response) => {
        return response.json();
      }).then((json) => {
        console.log("ðŸš€ ~ Product upsell added");
        window.location.href = '/cart';
      }).catch((err) => {
        console.error(err)
      });
  }

  // Handle Modal events
  const modals = document.querySelectorAll('.modal');
  modals.forEach(modal => {
    // When the user clicks on <span> (x), close the modal
    var span = modal.querySelector(".close");
    span.onclick = function() {
      modal.style.display = "none";
      sessionStorage.setItem('plumpit.upsell_active', false);
    }

    // When the user clicks on close button, close the modal
    var close = modal.querySelector(".close-button");
    if (close) {
      close.onclick = function() {
        modal.style.display = "none";
        sessionStorage.setItem('plumpit.upsell_active', false);
      }
    }

    // When the user clicks anywhere outside of the modal, close it
    window.onclick = function(event) {
      if (event.target == modal) {
        modal.style.display = "none";
        sessionStorage.setItem('plumpit.upsell_active', false);
      }
    }

    // When the users clicks the bcgcf button, accept the offer
    var bcgcf = modal.querySelector(".bcgcf-accept");
    if (bcgcf) {
      bcgcf.onclick = function() {
        modal.style.display = "none";
        sessionStorage.setItem('plumpit.bcgcf', true);
        handleBcgcfClicked();
      }
    }

    // When the users clicks the decline bcgcf button, close it
    var bcgcfDecline = modal.querySelector(".bcgcf-decline");
    if (bcgcfDecline) {
      bcgcfDecline.onclick = function() {
        modal.style.display = "none";
      }
    }

    // When the user clicks the product-upsell button, accept the offer
    var upsell = modal.querySelector(".upsell-button");
    if (upsell) {
      upsell.onclick = function() {
        modal.style.display = "none";
        sessionStorage.setItem('plumpit.upsell', true);
        sessionStorage.setItem('plumpit.upsell_active', false);
        handleUpsellClicked(upsell.dataset.trigger, upsell.dataset.upsell, upsell.dataset.action);
      }
    }

    // When the users clicks the decline upsell button, close it
    var upsellDecline = modal.querySelector(".upsell-decline");
    if (upsellDecline) {
      upsellDecline.onclick = function() {
        modal.style.display = "none";
        sessionStorage.setItem('plumpit.upsell_active', false);
      }
    }
  })
</script>